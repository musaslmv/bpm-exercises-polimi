{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red67\green67\blue67;}
{\*\expandedcolortbl;;\csgenericrgb\c26275\c26275\c26275;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww15560\viewh16380\viewkind1
\deftab720
\pard\pardeftab720\ri-9\sl276\slmult1\sb400\sa120\partightenfactor0

\f0\fs40 \cf0 Exercise Predictive monitoring - Part 2\
\pard\pardeftab720\ri-9\sl276\slmult1\sb320\sa80\partightenfactor0

\fs28 \cf2 Filtering prefixes, aggregation and index-based encoding. Repeat the following tasks for the 2 event logs: small (artificial) and BPIC_2017 (real). \
\pard\pardeftab720\ri-9\sl276\slmult1\sb320\sa80\partightenfactor0
\cf2 Submission: create one notebook per event log and upload on a (public) github. Provide the link to the github repository to the lecturers.\
\pard\pardeftab720\ri-9\sl276\slmult1\sb320\sa80\partightenfactor0

\fs22 \cf0 \
\pard\tx360\tx1080\pardeftab720\li1080\fi-360\ri-9\sl276\slmult1\partightenfactor0
\ls1\ilvl0\cf0 1.	Import an event log as a pandas dataframe\uc0\u8232 \
2.	Create an event log that retains only the attributes caseid, activity, timestamp, resource and outcome. Rename the attributes as \'93caseid, activity, ts, resource, outcome\'94 if names are different (note: for BPIC17 the outcome label coliumn is \'93(case) Accepted\'94, for the small log` is \'93resource_anomaly_type\'94)\
\pard\tx360\tx1080\pardeftab720\li1080\fi-360\ri-9\sl276\slmult1\partightenfactor0
\cf0 \
3. Create a function to extract the prefixes of length L from the event log. This function retains only the first L events of all cases that have at least L events.\uc0\u8232 \
\pard\tx360\tx1080\pardeftab720\li1080\fi-360\ri-9\sl276\slmult1\partightenfactor0
\ls2\ilvl0\cf0 4. Create a function that does aggregation encoding of a prefix extracted from the event log:\uc0\u8232 Activity and resource are aggregated using frequency\u8232 Timestamp are aggregated using average\
\
5.	Create a function that does index-based encoding of a extrcted from the evebnt log.\
\pard\pardeftab720\li720\ri-9\sl276\slmult1\partightenfactor0
\ls2\ilvl0\cf0 Activity and resource are one-hot encoded\uc0\u8232 Timestamp is left as-is\
\pard\pardeftab720\fi720\ri-9\sl276\slmult1\partightenfactor0
\ls2\ilvl0\cf0 \
\pard\tx360\tx1080\pardeftab720\li1080\fi-360\ri-9\sl276\slmult1\partightenfactor0
\ls2\ilvl0\cf0 6.	Train a decision tree (DT) and a randomforest (RF) from the scikit-learn package for outcome label prediction for the event log for prefix lengths L=2 and L=5.  Split 70-30 for training-testing (no temporal splitting or cross-validation needed!).\
\pard\pardeftab720\ri-9\sl276\slmult1\partightenfactor0
\ls2\ilvl0\cf0 \
Hyperparameters\
DT: max_depth=5\
RF: n_estimators=100, oob_score=True\
\
\
\
\
}